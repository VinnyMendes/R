console.log <- function(fmt,...) {
print(paste(format(Sys.time(), "%H:%M:%S"), sprintf(fmt, ...)))
}
console.log(123)
clear
stop
quit
1+2
'1'+'2'
a+2
a = 5
a+2
10^4
2^30
2^100
2^1000000000000000
2^100000000000000
2^10000000000000
2^1000000000000
2^10000000000
2^10000000
2^10000
2^1000
a
clear
a = 1
a
b = 1
c = -1
a <- 1
a
console.log(oi)
quit
a
b
c
a <-1
b <- 1
c <- -1
a, b, c
a
b
c
View(console.log)
View(console.log)
a <-1
b<-1
c<- -1
a
b
c
r1 <- -b + sqrt(b^2-4*a*c)/2*a
r2 <- -b - sqrt(b^2-4*a*c)/2*a
ls()
ls
ls()
rm()
rm(a)
rm(.)
rm(all)
rm(b,c,r1,r2)
log*(8)
log(8)
help('log')
log(2)
?log
args(log)
log(10, 10)
log(2, 2)
log(8,2)
log(8,base=2)
log(x=8,base=2)
x
log(1000,100)
log10(100)
pi
help(pi)
LETTERS
letters
pi(7)
options(digits=10)
pi
options(digits=20)
pi
options(digits=100000)
options(digits=1000)
options(digits=100)
options(digits=22)
pi
LETTERS
month.abb
month.name
pi
100*pi
x = pi
x*10000
x
options(digits=6)
pi
pi * 10
pi * 100
paises <- c('Brasil', 'EUA')
paises
class(paises)
class("paises")
paises == "paises"
class(paises) == class("paises")
ranl <- c(1,3)
ranl
class(ranl)
rm ranl
rm(ranl)
rank <- c(1,3)
names(rank) <- paises
rank
installed.packages()
data()
CO2
women
help("CO2")
help(co2)
help("CO2")
summary(CO2)
CO2
Co2
CO2
co2
WorldPhones
25*26/2
n*(n+1)/2
n <- 30
n*(n+1)/2
x <- seq(1,n)
x
sum(x)
mean(x)
max(x)
sort(x)
sort(-x)
sort(x)
help(sort)
sort(x, decreasing = TRUE)
sum(2)
library(dslabs)
help("install.packages")
install.packages(dslabs)
install.packages('dslabs')
library(dslabs)
library(dslabs)
a <- 1
type(a)
class(a)
args(log)
?log
help(log)
exp(1)
e
log(exp(1))
log(exp(60))
2^3
2xp(3)
help(exp)
(2,3)
help(power)
power(2,3)
help(exp)
'^'(2,3)
'+'(2,3)
'-'(2,3)
'/'(2,3)
'//'(2,3)
'%'(2,3)
'^'(2,3)
pi
help(options)
options(digits=20)
pi
paises <- c("Brasil", "EUA")
paises
class(paises)
class('paises')
ls
ls()
n <- 1000
x <- seq(1,n)
'+'(x)
library(dslabs)
data(murders)
class(murders)
str(murders)
head(murders)
tail(murders)
max(murders$total)
murders$state[1257]
murders[1257]
murders$population
class(murders$population)
names(murders)
pop <- murders$population
length(pop)
source("C:/Users/vinicius.ms/Desktop/Faculdade/R/R-aula2.R", echo=TRUE)
class(pop)
class(pop)
length(pop)
class(pop)
class(murders$state)
pop <- murders$population
length(pop)
class(pop)
class(murders$state)
library(dslabs)
data(murders)
class(murders)
str(murders)
head(murders)
names(murders)
pop <- murders$population
length(pop)
class(pop)
class(murders$state)
z <- 3 == 2
z <- 2 == 2
z <- 3 == 2
class(z)
class(murders$region)
murders$region
length(murders$region)
levels(murders$region)
length(levels(murders$region))
murders$region == murders[["region"]]
murders[["region"]]
murders$region
class(murders[["region"]])
class(murders["region"])
x <- c("a","a","b","b","c")
class(x)
x
length(x)
levels(x)
table(x)
table(x)
x <- c("a","a","b","b","b","c")
table(x) #faz um quadro contando as repetições
a=2
b=-1
c=-4
raiz1 <- (-b + sqrt(b^2-4*a*c))/2*a
raiz2 <- (-b - sqrt(b^2-4*a*c))/2*a
raiz1 <- (-b + sqrt(b^2-4*a*c)/(2*a)
raiz2 <- (-b - sqrt(b^2-4*a*c)/(2*a)
raiz1 <- (-b + sqrt(b^2-4*a*c))/(2*a)
raiz2 <- (-b - sqrt(b^2-4*a*c))/(2*a)
a<-2
b<- -1
c<- -4
raiz1 <- (-b + sqrt(b^2-4*a*c))/(2*a)
raiz2 <- (-b - sqrt(b^2-4*a*c))/(2*a)
a<-2
b<- -1
c<- -4
raiz1 <- (-b + sqrt(b^2-4*a*c))/(2*a)
raiz2 <- (-b - sqrt(b^2-4*a*c))/(2*a)
(2+)
(2+2)
(2+
20222
200002222
(2+
1
)
log(1024, 4)
data(movielens)
library(dslabs)
data(movielens)
force(movielens)
nrow(movielens)
length(movielens)
class(movielens$title)
class(movielens$genres)
levels(movielens$genres)
length(levels(movielens$genres))
head(movielens)
length(movielens$title)
View(movielens)
movielens[["title":"Toy Story"]]
movielens
movielens
head(movielens)
str(movielens)
x <- c("a","a","b","b","b","c")
table(x) #faz um quadro contando as repetições
codes <- c(380,124,818)
country <- c("Italy", "Canada", "Egypt")
class(codes)
class(country)
country <- c(Italy, Canada, Egypt)
class(country)
class(codes)
class(country)
country <- c(Italy, Canada, Egypt)
class(codes)
class(country)
class(country)
codes <- c(italy=380,canada=124,egypt=818)
class(codes)
codes <- c("italy"=380,"canada"=124,"egypt"=818)
class(codes)
codes <- c(italy=380,canada=124,egypt=818)
codes <- c(italy=380,canada=124,egypt=818)
class(codes)
codes <- c("italy"=380,"canada"=124,"egypt"=818)
class(codes)
codes <- c(380,124,818)
country <- c("Italy", "Canada", "Egypt")
names(codes) <- country
country
codes <- c(380,124,818)
country <- c("Italy", "Canada", "Egypt")
names(codes) <- country
codes <- c(380,124,818, 0)
country <- c("Italy", "Canada", "Egypt")
names(codes) <- country
print(country)
codes
codes <- c(380,124,818)
country <- c("Italy", "Canada", "Egypt")
names(codes) <- country
codes
seq(1,10)
seq(1, 10, 2)
1:10
seq(1, 10, 0.1)  #sequencia de 1 a 10 andando 2 por vez
seq(10, 1, -0.1)  #sequencia de 1 a 10 andando 0.1 por vez
seq(10, 1, 0.1)  #sequencia de 1 a 10 andando 0.1 por vez
seq(10, 1, -0.1)  #sequencia de 1 a 10 andando 0.1 por vez
1:10
1:10:2
codes[124]
codes["124"]
codes[[124]]
codes[2]  #segundo elemento
codes[c(1,3)]
codes
codes[c(3,2,1)]
codes[]
codes[c(seq(1,3,2))]
[1,2,3,4] = c(seq(1,4))
[1,2,3,4] == c(seq(1,4))
c(1,2,3,4) == c(seq(1,4))
c(1,2,3,4) == c(1:4)
c(1,2,3,4) == c(seq(1,4))
codes[1:2]
codes["canada"]
codes["Canada"]
x <- c(1,"Canada",3)
class(x)
codes[c("Egypt", "Italy")]
x <- 1:5
y <- as.character(x)
y
as.numeric(y)
y
y <- as.numeric(y)
y
x <- c(1,"Canada",3)
class(x)
x <- 1:5
y <- as.character(x)
y
y <- as.numeric(y)
y
temp <- [50,75,90,100,150]
temp <- c(50,75,90,100,150)
city <- c("Brasilia", "Paris", "Japonvar", "Itu", "Roma")
names(temp) <- city
temp
city <- c("Brasilia", "Paris", "Japonvar", "Itu")
temp
names(temp) <- city
temp
city <- c("Brasilia", "Paris", "Japonvar", "Itu", "Roma")
names(temp) <- city
temp
temp[1:3]
head(temp)
temp[c("Paris", "Itu")]
x <- seq(13,71)
x
len(x)
len(x)
length
length(x)
sum(x)
sum(x[1:3])
x <- seq(13,71,2)
x
sum(x)
sum(x[c(seq(13,71,2))])
x <- seq(13,71)
sum(x[c(seq(13,71,2))])
sum(x[seq(13,71,2)])
x <- seq(13,71,2)
x
sum(x)
x <- seq(13,71)
x
sum(x[seq(1,71,2)])
x <- seq(13,71)
x
sum(x[seq(1,71,2)])
z <- seq(1,300, 7)
z
z <- seq(7,300, 7)
z
z <- seq(0,300, 7)  #Multiplos de 7 que são menores ou iguais a 300
z
impares <- seq(1,100,2)
impares
class(impares)
length(seq(6,54,4/7))
seq(6,54,4/7)
seq(6,55,4/7)
length(seq(6,55,4/7))
v <- seq(0,100, length.out = 5)
v
v <- seq(0,7, length.out = 5)
v
j <- seq(0,10, length.out = 100)
j
j <- seq(1,10, length.out = 100)
j
h<- vector("numeric", length = 15)
h
plot(h)
hist(h)
h<- vector("character", length = 15)
h
h<- vector("Logical", length = 15)
h<- vector("logical", length = 15)
h
class(3)
class(3L)
library(readxl)
precipitacao <- read_excel("precipitacao.xls")
View(precipitacao)
setwd("C:/Users/vinicius.ms/Desktop/Faculdade/R")
library(readxl)
precipitacao <- read_excel("precipitacao.xls")
View(precipitacao)
precipitacao
y <- precipitacao$Chuva
quantile(y, prob=c(0,.25,.5,.75,1))
diff(range(precipitacao$Chuva))
boxplot(y)
par(bg = "lightblue")
histograma <- hist(y, main="Histograma das Chuvas", xlab = "Chuva", ylab="FrequÃªncia", col="darkblue",bg="black")
abline(v=c(quantile(y, probs=c(.25,.5,.75))), col=c("red", "blue", "green"),lwd=5)
abline(v=mean(y), col=c("orange"),lwd=2, lty=2)
legend(bg="white",x="topright", c("1Âº Quartil", "2Âº Quartil", "3Âº Quartil", "MÃ©dia", "Normal"), col = c("red", "blue", "green", "orange","purple"),lty=c(1,1,1,2,1), lwd=c(2,2,2,2,2))
#colocando a normal no grÃ¡fico
xfit<-seq(min(y),max(y))
yfit<-dnorm(xfit,mean=mean(y),sd=sd(y))
yfit <- yfit*diff(histograma$mids[1:2])*length(y)
lines(xfit, yfit, col="purple", lwd=2)
vetor <- c(1,3,5,"a")
vetor
class(vetor)
as.numeric(vetor)
vetor
numerico <- as.numeric(vetor)
numerico
